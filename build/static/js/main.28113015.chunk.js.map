{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","e","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","action","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","_ref","tagline","Order","rederOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","Number","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","_this$props$details","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.28113015.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD',\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, '-')\n    .replace(/[^\\w-]+/g, '')\n    .replace(/--+/g, '-')\n    .replace(/^-+/, '')\n    .replace(/-+$/, '');\n}\n\nexport function getFunName() {\n  const adjectives = [\n    'adorable',\n    'beautiful',\n    'clean',\n    'drab',\n    'elegant',\n    'fancy',\n    'glamorous',\n    'handsome',\n    'long',\n    'magnificent',\n    'old-fashioned',\n    'plain',\n    'quaint',\n    'sparkling',\n    'ugliest',\n    'unsightly',\n    'angry',\n    'bewildered',\n    'clumsy',\n    'defeated',\n    'embarrassed',\n    'fierce',\n    'grumpy',\n    'helpless',\n    'itchy',\n    'jealous',\n    'lazy',\n    'mysterious',\n    'nervous',\n    'obnoxious',\n    'panicky',\n    'repulsive',\n    'scary',\n    'thoughtless',\n    'uptight',\n    'worried',\n  ];\n\n  const nouns = [\n    'women',\n    'men',\n    'children',\n    'teeth',\n    'feet',\n    'people',\n    'leaves',\n    'mice',\n    'geese',\n    'halves',\n    'knives',\n    'wives',\n    'lives',\n    'elves',\n    'loaves',\n    'potatoes',\n    'tomatoes',\n    'cacti',\n    'foci',\n    'fungi',\n    'nuclei',\n    'syllabuses',\n    'analyses',\n    'diagnoses',\n    'oases',\n    'theses',\n    'crises',\n    'phenomena',\n    'criteria',\n    'data',\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component {\n  static propTypes = {\n    history: PropTypes.object.isRequired,\n  };\n  myInput = React.createRef();\n  goToStore = e => {\n    // 1. stop the form from submitting\n    e.preventDefault();\n    // 2. get the text form input\n    const storeName = this.myInput.current.value;\n    // 3. change the page\n    this.props.history.push(`/store/${storeName}`);\n  };\n  render() {\n    return (\n      <form action=\"\" className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store -> </button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ tagline }) => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">the</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object.isRequired,\n    order: PropTypes.object.isRequired,\n    removeFromOrder: PropTypes.func.isRequired,\n  };\n  rederOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === 'available';\n    const transitionOptions = {\n      classNames: 'order',\n      key,\n      timeout: { enter: 500, exit: 500 },\n    };\n\n    // make sure fish is loaded before we continue!\n    if (!fish) return null;\n    if (!isAvailable) {\n      return (\n        <CSSTransition>\n          <li key={key}>\n            Извените {fish ? fish.name : 'fish'} сейчас не доступна\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition {...transitionOptions}>\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            кг {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.rederOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n  static propTypes = {\n    addFish: PropTypes.func.isRequired,\n  };\n\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  createFish = e => {\n    e.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: Number(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    };\n    this.props.addFish(fish);\n    // refresh the form\n    e.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input type=\"text\" name=\"name\" ref={this.nameRef} placeholder=\"Name\" />\n        <input\n          type=\"text\"\n          name=\"price\"\n          ref={this.priceRef}\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"description\" />\n        <input\n          type=\"text\"\n          name=\"image\"\n          ref={this.imageRef}\n          placeholder=\"image\"\n        />\n        <button type=\"submit\">+Add Item</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      desc: PropTypes.string.isRequired,\n      status: PropTypes.string.isRequired,\n    }).isRequired,\n    index: PropTypes.string.isRequired,\n    deleteFish: PropTypes.func.isRequired,\n    updateFish: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    console.log(e.currentTarget.value);\n    // update that fish\n    // 1. Take a copy of the current fish\n    const updatedFish = {\n      ...this.props.fish,\n      [e.currentTarget.name]: e.currentTarget.value,\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Delete\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = props => (\n  <nav className=\"Login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory</p>\n    <button className=\"github\" onClick={() => props.authenticate('Github')}>\n      Login with GitHub\n    </button>\n    <button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>\n      Login with Twitter\n    </button>\n    <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>\n      Login with Facebook\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: 'AIzaSyAX0ujybfBiaXJQeR0HIQODAs7olvzKYIM',\n  authDomain: 'catch-of-the-dat-alex.firebaseapp.com',\n  databaseURL: 'https://catch-of-the-dat-alex.firebaseio.com',\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// this is a named export\nexport { firebaseApp };\n\n// this is a default export\nexport default base;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object.isRequired,\n    updateFish: PropTypes.func.isRequired,\n    deleteFish: PropTypes.func.isRequired,\n    loadSampleFishes: PropTypes.func.isRequired,\n    addFish: PropTypes.func.isRequired,\n    storeId: PropTypes.string.isRequired,\n  };\n\n  state = {\n    uid: null,\n    owner: null,\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      console.log('user is ', user);\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    // 1. Look up the current store in the firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    console.log('store is ', store);\n    // 2. Claim it if there is no owner\n    if (!store.owner) {\n      // save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid,\n      });\n    }\n    // 3. Set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid,\n    });\n    console.log('authData is ', authData);\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log('loging out');\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>;\n\n    // 1. Check if they are loged In\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    // 2. Check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the owner</p>\n          {logout}\n        </div>\n      );\n    }\n\n    // 3. They must be the owner, just render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory!!!</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: 'Pacific Halibut',\n    image: '/images/hali.jpg',\n    desc:\n      'Everyones favorite white fish. We will cut it to the size you need and ship it.',\n    price: 1724,\n    status: 'available',\n  },\n\n  fish2: {\n    name: 'Lobster',\n    image: '/images/lobster.jpg',\n    desc:\n      'These tender, mouth-watering beauties are a fantastic hit at any dinner party.',\n    price: 3200,\n    status: 'available',\n  },\n\n  fish3: {\n    name: 'Sea Scallops',\n    image: '/images/scallops.jpg',\n    desc:\n      'Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound',\n    price: 1684,\n    status: 'unavailable',\n  },\n\n  fish4: {\n    name: 'Mahi Mahi',\n    image: '/images/mahi.jpg',\n    desc:\n      'Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. ',\n    price: 1129,\n    status: 'available',\n  },\n\n  fish5: {\n    name: 'King Crab',\n    image: '/images/crab.jpg',\n    desc:\n      'Crack these open and enjoy them plain or with one of our cocktail sauces',\n    price: 4234,\n    status: 'available',\n  },\n\n  fish6: {\n    name: 'Atlantic Salmon',\n    image: '/images/salmon.jpg',\n    desc:\n      'This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!',\n    price: 1453,\n    status: 'available',\n  },\n\n  fish7: {\n    name: 'Oysters',\n    image: '/images/oysters.jpg',\n    desc: 'A soft plump oyster with a sweet salty flavor and a clean finish.',\n    price: 2543,\n    status: 'available',\n  },\n\n  fish8: {\n    name: 'Mussels',\n    image: '/images/mussels.jpg',\n    desc:\n      'The best mussels from the Pacific Northwest with a full-flavored and complex taste.',\n    price: 425,\n    status: 'available',\n  },\n\n  fish9: {\n    name: 'Jumbo Prawns',\n    image: '/images/prawns.jpg',\n    desc:\n      'With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.',\n    price: 2250,\n    status: 'available',\n  },\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      desc: PropTypes.string.isRequired,\n      status: PropTypes.string.isRequired,\n    }).isRequired,\n    addToOrder: PropTypes.func.isRequired,\n    index: PropTypes.string.isRequired,\n  };\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === 'available';\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvailable ? 'Add To Order' : 'Sold Out'}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n  };\n\n  state = {\n    fishes: {},\n    order: {},\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate our localstorege\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes',\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order),\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = fish => {\n    // take a cope of the existing state\n    const fishes = { ...this.state.fishes };\n    // add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // set the new fishes object to state\n    this.setState({\n      fishes,\n    });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // 2, Update that state\n    fishes[key] = updatedFish;\n    // 3. Set that to state\n    this.setState({ fishes });\n  };\n\n  deleteFish = key => {\n    // 1. take a cope of state\n    const fishes = { ...this.state.fishes };\n    // 2. update the state\n    fishes[key] = null;\n    // 3. Update state\n    this.setState({ fishes });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addToOrder = key => {\n    // 1.take a copy of state\n    const order = { ...this.state.order };\n    // 2. Either add to the order or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  removeFromOrder = key => {\n    // 1.take a copy of state\n    const order = { ...this.state.order };\n    // 2. Remove item from order\n    delete order[key];\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh seafood market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found!!!</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}